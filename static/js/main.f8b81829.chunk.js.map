{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","style","color","role","onClick","changeMode","htmlFor","Textform","text","setText","useState","Fragment","value","onChange","event","target","rows","handleChange","newstr","toUpperCase","alert","handleLowChange","toLowerCase","handleClear","length","match","defaultProps","about","Alert","word","lower","charAt","slice","capitalization","msg","App","setMode","setAlert","showAlert","message","setTimeout","document","body","backgroundColor","changeRed","changeGreen","changeBlue","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f8b81829.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n    // const buttonStyle = {\n    //     width: 40,\n    //     height: 40,\n    //     borderRadius: 100,\n    // };\n    return (\n        <nav\n            className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n        >\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">\n                    {props.title}\n                </a>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div\n                    className=\"collapse navbar-collapse\"\n                    id=\"navbarSupportedContent\"\n                >\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a\n                                className=\"nav-link active\"\n                                aria-current=\"page\"\n                                href=\"#\"\n                            >\n                                Home\n                            </a>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/about\">\n                                {props.about}\n                            </a>\n                        </li> */}\n                    </ul>\n                    {/* {props.mode === \"dark\" ? (\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-light mx-3 my-2\"\n                            style={buttonStyle}\n                            onClick={props.changeMode}\n                        ></button>\n                    ) : (\n                        <></>\n                    )}\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-danger mx-3 my-2\"\n                        style={buttonStyle}\n                        onClick={props.changeRed}\n                    ></button>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-success mx-3 my-2\"\n                        style={buttonStyle}\n                        onClick={props.changeGreen}\n                    ></button>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-info mx-3 my-2\"\n                        style={buttonStyle}\n                        onClick={props.changeBlue}\n                    ></button> */}\n                    <form className=\"d-flex\">\n                        {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" /> */}\n                        {/* <button className=\"btn btn-primary\" type=\"submit\">Search</button> */}\n                        <div\n                            className=\"form-check form-switch\"\n                            style={{\n                                color:\n                                    props.mode === \"light\" ? \"black\" : \"white\",\n                            }}\n                        >\n                            <input\n                                className=\"form-check-input\"\n                                type=\"checkbox\"\n                                role=\"switch\"\n                                id=\"flexSwitchCheckDefault\"\n                                onClick={props.changeMode}\n                            />\n                            <label\n                                className=\"form-check-label\"\n                                htmlFor=\"flexSwitchCheckDefault\"\n                            >\n                                {props.mode === \"light\"\n                                    ? \"Enable Dark Mode\"\n                                    : \"Enable Light Mode\"}\n                            </label>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    about: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n    title: \"UpperLowerHub\",\n    about: \"About\",\n};\n","import React from \"react\";\nimport { useState } from \"react\";\n\nexport default function Textform(props) {\n    // var reg = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/\n    const [text, setText] = useState(\"\");\n\n    const handleChange = () => {\n        let newstr = text.toUpperCase();\n        setText(newstr);\n        props.alert(\"Converted to Upper Case\", \"success\")\n    };\n    const handleLowChange = () => {\n        let newstr = text.toLowerCase();\n        setText(newstr);\n        props.alert(\"Converted to Lower Case\", \"success\")\n    };\n    // const handleEmail = () => {\n    //   if(reg.test(text) === true){\n    //     alert('email verified')\n    //   }\n    // }\n    const handleClear = () => {\n        //let newstr = text.toLowerCase();\n        setText(\"\");\n        props.alert(\"Successfully clear the text\", \"success\")\n    };\n    // var wordsCount = text.match(/\\S+/g)\n    // console.log(wordsCount.length)\n    const handleOnChange = (event) => {\n        // console.log('hello')\n        setText(event.target.value);\n    };\n    return (\n        <>\n            <div className=\"container\" >\n                <h1>{props.title}</h1>\n                <div className=\"mb-3\" style={{color: props.mode === 'light' ? 'white' : 'black'}}>\n                    {/* <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label> */}\n                    <textarea\n                        className=\"form-control\"\n                        value={text}\n                        onChange={handleOnChange}\n                        id=\"textBox\"\n                        rows=\"8\"\n                    ></textarea>\n                </div>\n                <button className=\"btn btn-primary mx-2\" onClick={handleChange}>\n                    Convert to UpperCase\n                </button>\n                <button\n                    className=\"btn btn-primary mx-2\"\n                    onClick={handleLowChange}\n                >\n                    Convert to LowerCase\n                </button>\n                {/* <button className=\"btn btn-primary mx-2\" onClick={handleEmail}>Check Email</button> */}\n                <button className=\"btn btn-primary mx-2\" onClick={handleClear}>\n                    Clear Text\n                </button>\n            </div>\n            <div className=\"container my-3\">\n                <h1>Your Text Summary</h1>\n                <p>\n                    {text.length > 1 ? text.match(/\\S+/g).length : 0} words and {text.length} characters\n                </p>\n                <h2>Preview</h2>\n                <p>{text.length > 0 ? text : 'Enter the text above to preview it.'}</p>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\n\nfunction Alert(props) {\n\n    const capitalization = (word) => {\n        var lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\n    }\n\n    return (\n        props.alert && <div\n            className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n            role=\"alert\"\n        >\n            <strong>{capitalization(props.alert.type)}</strong> : {props.alert.msg}\n            {/* <button\n                type=\"button\"\n                className=\"btn-close\"\n                data-bs-dismiss=\"alert\"\n                aria-label=\"Close\"\n            ></button> */}\n        </div>\n    );\n}\n\nexport default Alert;\n","import { useState } from \"react\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\nimport Alert from \"./Components/Alert\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import About from \"./Components/About\";\n\nfunction App() {\n    const [mode, setMode] = useState(\"light\");\n    const [alert, setAlert] = useState(null);\n    const changeMode = () => {\n        if (mode === \"light\") {\n            setMode(\"dark\");\n            document.body.style.backgroundColor = \"black\";\n            showAlert(\"Dark Mode Enabled\", \"success\");\n        } else {\n            setMode(\"light\");\n            document.body.style.backgroundColor = \"white\";\n            showAlert(\"Light Mode Enabled\", \"success\");\n        }\n    };\n    const changeRed = () => {\n        if (mode === \"light\") {\n            setMode(\"dark\");\n            document.body.style.backgroundColor = \"#913636\";\n            showAlert(\"Dark Mode Enabled\", \"success\");\n        } else {\n            setMode(\"light\");\n            document.body.style.backgroundColor = \"#fa7373\";\n            showAlert(\"Light Mode Enabled\", \"success\");\n        }\n    };\n    const changeGreen = () => {\n        if (mode === \"light\") {\n            setMode(\"dark\");\n            document.body.style.backgroundColor = \"#237a4f\";\n            showAlert(\"Dark Green Mode Enabled\", \"success\");\n        } else {\n            setMode(\"light\");\n            document.body.style.backgroundColor = \"#81fcbf\";\n            showAlert(\"Light Green Color Enabled\", \"success\");\n        }\n    };\n    const changeBlue = () => {\n        if (mode === \"light\") {\n            setMode(\"dark\");\n            document.body.style.backgroundColor = \"#7afbff\";\n            showAlert(\"Light Blue Color Enabled\", \"success\");\n        } else {\n            setMode(\"light\");\n            document.body.style.backgroundColor = \"#45acb0\";\n            showAlert(\"Dark Blue Color Enabled\", \"success\");\n        }\n    };\n    const showAlert = (message, type) => {\n        setAlert({\n            msg: message,\n            type: type,\n        });\n        setTimeout(() => {\n            setAlert(null);\n        }, 2000);\n    };\n\n    return (\n        <>\n            {/* <Router> */}\n                <Navbar\n                    mode={mode}\n                    changeMode={changeMode}\n                    changeRed={changeRed}\n                    changeGreen={changeGreen}\n                    changeBlue={changeBlue}\n                />\n                <Alert alert={alert} />\n                <div\n                    className=\"container my-3\"\n                    style={{ color: mode === \"light\" ? \"black\" : \"white\" }}\n                >\n                    {/* <Routes>\n                        <Route exact path=\"/about\" element={<About />} />\n                        <Route\n                            exact\n                            path=\"/\"\n                            element={\n                                \n                            }\n                        />\n                    </Routes> */}\n                    <Textform\n                                    title=\"Enter Your Text Here\"\n                                    mode={mode}\n                                    alert={showAlert}\n                                />\n                </div>\n            {/* </Router> */}\n        </>\n        // <div className='container' style={{  borderColor:'black', height: \"100vh\", backgroundColor:'Highlight'}}>\n        // <div style={{justifyContent:'center', padding:25, textAlign:'center'}}>\n        //   {\n        //     name === '' ? <></> : <h1>{name}</h1>\n        //   }\n        //   <label style={{alignSelf:'center'}}>\n        //     Name: <input name='name' onChange={e => setName(e.target.value)}/>\n        //   </label>\n        //   </div>\n        //   <div style={{justifyContent:'center', textAlign:'center', padding:25}}>\n        //   <button type='submit' onClick={() => name === '' ? alert(`please enter your name`) : alert(name)}>Submit</button>\n        //   </div>\n        // </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}